<?xml version="1.0" ?>
<script version="12.3.0.766">
    <description>Script to find non-serializable members in classes implementing Serializable.</description>
    <source><![CDATA[IJavaVisitor v = javaAccess.createVisitor()

//variable to be used in recursive function must not be declared using def or a type.
typesWithNonSerializableMembers = result.addNode("Serializable types with non-serializable members");
visitedTypes = new HashSet<String>()

//function to recursively check if a type contains non-serializable fields
def findNonSerializableFields(JavaTypeAccess type) 
{
	if (visitedTypes.contains(type.getName())) 
	{
        //println "type already checked: " + type.getName()
        return
    }
	visitedTypes.add(type.getName())
	println "processing serializable type : " + type.getName() 
	
	//Add elements so they show up in the elements tab, so we know which types are serializable
	result.addElement(type)
    
    List<JavaFieldAccess> fields = type.getFields()                            
    for (JavaFieldAccess field in fields) 
	{
        if (field.isStatic() || field.isTransient()) 
		{
            continue
        }
        List<ElementAccess> fieldTypes = field.getReferencedElements(Aggregator.TYPE, false, JavaDependencyKind.FIELD)
        if (fieldTypes.size() == 0) 
		{
			//omit primitive types like int, long, double
            continue
        }
			
        for (ElementAccess element in fieldTypes) 
		{
            JavaTypeAccess typeAccess = (JavaTypeAccess) element
             
            if (typeAccess.isExternal())
            {
                continue
            }
            if (!typeAccess.typeOf("java.io.Serializable")) 
            {
	            result.addWarningIssue(field, "non-serializable member(s) in type: $type.name", typeAccess.getName())
		  	    result.addNode(typesWithNonSerializableMembers, field)
            }
        }
    }
}

v.onType
{
	JavaTypeAccess type ->
    	if(type.isExternal() || type.isExcluded())
    {
        return
    }
    if (type.typeOf("java.io.Serializable")) 
    {
        	findNonSerializableFields(type)
    }
    v.visitChildren(type)
}

//Traverse the model
coreAccess.visitModel(v)]]></source>
    <parameterDefinitions>
        <parameterDefinition name="timeout" type="Integer"
                             description="When scripts are scheduled for automated execution they time out after the specified number of seconds. The timeout must be greater than '0'."
                             defaultValue="10" candidates=""></parameterDefinition>
        <parameterDefinition name="output" type="String"
                             description="When a path is specified the output of the script is written into this file. The use of an absolute path (i.e. starting with '/' or 'C:/') is not recommended. It might not be cross-platform compatible."
                             defaultValue="" candidates=""></parameterDefinition>
    </parameterDefinitions>
    <languages>
        <language>Java</language>
    </languages>
</script>